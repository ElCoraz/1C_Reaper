//***********************************************************************************************************
&НаКлиенте
Процедура Деобфускация(Команда)    
	
	МассивПропуска = Новый Массив;
	
	МассивПропуска.Добавить("~");
	МассивПропуска.Добавить("Пока");
	МассивПропуска.Добавить("Перейти");
	МассивПропуска.Добавить("Попытка");
	МассивПропуска.Добавить("Возврат");
	МассивПропуска.Добавить("Функция");
	МассивПропуска.Добавить("Процедура");
	МассивПропуска.Добавить("КонецЕсли");
	МассивПропуска.Добавить("Исключение");
	МассивПропуска.Добавить("КонецЦикла");
	МассивПропуска.Добавить("КонецПопытки");
	МассивПропуска.Добавить("КонецФункции");
	МассивПропуска.Добавить("КонецПроцедуры");
	
	Б = 1;
	
	МассивПеременные = Новый Массив; 
	
	Для А = 0 По 9 Цикл
	
		МассивПеременные.Добавить("_" + Строка(А)); 
	
	КонецЦикла;
	
	Переменные = Новый Соответствие; 
	
	Для А = 0 По МассивПеременные.Количество() - 1 Цикл
		
		Переменные.Вставить(МассивПеременные[А], Неопределено);

		Объект.Данные = СтрЗаменить(Объект.Данные, МассивПеременные[А], "Переменные[""" + МассивПеременные[А] + """]");	
		
	КонецЦикла;
	
	Строки = Новый Соответствие; 
	
	Объект.Результат = "";
	
	Массив = Новый Массив;  
	
	КоличествоСтрок = СтрЧислоСтрок(Объект.Данные);
	
	Для А = 1 По КоличествоСтрок Цикл
		
		ТекущаяСтрока = СокрЛП(СтрПолучитьСтроку(Объект.Данные, А));
		
		НеПродолжать = Ложь;	
		
		Для В = 0 По МассивПропуска.Количество() - 1 Цикл
			
			Если СтрНайти(ТекущаяСтрока, МассивПропуска[В]) > 0 Тогда
				
				НеПродолжать = Истина;
				
				Строки.Вставить(А, ТекущаяСтрока); 
	
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;

		Если НеПродолжать Тогда
			
			Продолжить;
			
		КонецЕсли;

		Попытка
			
			Если СтрНайти(ТекущаяСтрока, "Если") > 0 И СтрНайти(ТекущаяСтрока, "Тогда") > 0 Тогда
				
				СтрокаУсловия = СтрЗаменить(ТекущаяСтрока, "Если", "");	
				СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "Тогда", "");	
				
				Переменные.Вставить("Результат_" + Б, Вычислить(СтрокаУсловия));  

				Строки.Вставить(А, Переменные["Результат_" + Б]); 
				
				Б = Б + 1;
				
			Иначе

				Выполнить(ТекущаяСтрока);

				Строки.Вставить(А, ТекущаяСтрока); 

			КонецЕсли;

		Исключение 
			
			Если ВыводитьОшибки Тогда
			
				Сообщить(ОписаниеОшибки());
			
			КонецЕсли;

			Строки.Вставить(А, ТекущаяСтрока); 

		КонецПопытки;

	КонецЦикла;  
	
	Включать = Истина;  

	МассивОперации = Новый Массив; 
	
	МассивОперации.Добавить("=");
	МассивОперации.Добавить(">");
	МассивОперации.Добавить("<");
	МассивОперации.Добавить("<>");
	МассивОперации.Добавить(">=");
	МассивОперации.Добавить("<=");
	МассивОперации.Добавить("НЕ");
	МассивОперации.Добавить("И");

	МассивПаттерны = Новый Массив;  
	
	Для А = 0 По 9 Цикл

		Для Б = 0 По 9 Цикл
			
			Для В = 0 По 9 Цикл  
				
				Для Г = 0 По МассивОперации.Количество() - 1 Цикл  

					МассивПаттерны.Добавить(МассивПеременные[А] + " = " +  МассивПеременные[Б] + " " + МассивОперации[Г] + " " + МассивПеременные[В]); 
					МассивПаттерны.Добавить(МассивПеременные[А] + " = " +  МассивПеременные[Б] + " " + МассивОперации[Г] + " -" + МассивПеременные[В]); 
					МассивПаттерны.Добавить(МассивПеременные[А] + " = -" +  МассивПеременные[Б] + " " + МассивОперации[Г] + " " + МассивПеременные[В]); 
					МассивПаттерны.Добавить(МассивПеременные[А] + " = -" +  МассивПеременные[Б] + " " + МассивОперации[Г] + " -" + МассивПеременные[В]); 

				КонецЦикла;

			КонецЦикла;
				
			МассивПаттерны.Добавить(МассивПеременные[А] + " = " +  МассивПеременные[Б]);
			МассивПаттерны.Добавить(МассивПеременные[А] + " = -" +  МассивПеременные[Б]);
	
		КонецЦикла;
		
		МассивПаттерны.Добавить(МассивПеременные[А] + " = " +  МассивПеременные[А]);  
		
		Для Б = 0 По 9 Цикл
		
			МассивПаттерны.Добавить(МассивПеременные[А] + " = " + Строка(Б));   
		
		КонецЦикла;
		
	КонецЦикла; 
	
	Вложенность = Ложь;
	
	Для А = 1 По КоличествоСтрок Цикл 
		
		Если СтрНайти(Строки[А], "~") > 0 Тогда
			
			Продолжить;
			
		КонецЕсли; 
		
		Пропуск = Ложь;
		
		Для Б = 0 По МассивПаттерны.Количество() - 1 Цикл  
			
			СтрокаСравнения = МассивПаттерны[Б];   
			
			Для В = 0 По МассивПеременные.Количество() - 1 Цикл

				СтрокаСравнения = СтрЗаменить(СтрокаСравнения, МассивПеременные[В], "Переменные[""" + МассивПеременные[В] + """]");	
				
			КонецЦикла;

			Если СтрНайти(Строки[А], СтрокаСравнения) > 0 Тогда
				
				Пропуск = Истина;

				Прервать;
				
			КонецЕсли;  
			
		КонецЦикла; 

		Если Пропуск Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если СтрНайти(Строки[А], "Тогда") > 0  
			ИЛИ  СтрНайти(Строки[А], "Пока") > 0
			ИЛИ  СтрНайти(Строки[А], "Для") > 0 Тогда
			
			Вложенность = Истина;
			
		КонецЕсли;  
		
		Если (СтрНайти(Строки[А], "КонецЕсли") > 0  
			ИЛИ  СтрНайти(Строки[А], "КонецЦикла") > 0) И НЕ Вложенность Тогда
			
			Продолжить;
			
		КонецЕсли;  
		
		Если (СтрНайти(Строки[А], "КонецЕсли") > 0  
			ИЛИ  СтрНайти(Строки[А], "КонецЦикла") > 0) И Вложенность Тогда
			
			Вложенность = Ложь;
			
		КонецЕсли;  
		
		Если ТипЗнч(Строки[А]) = Тип("Строка") И Включать Тогда
			
			Объект.Результат = Объект.Результат + Строки[А] + Символы.ПС;
			
		КонецЕсли;
		
		Если ТипЗнч(Строки[А]) = Тип("Булево") Тогда
			
			Включать = Строки[А];
			
		КонецЕсли;   

		Если СтрНайти(Строки[А], "Возврат") > 0 Тогда
			
			Объект.Результат = Объект.Результат + СтрПолучитьСтроку(Объект.Данные, КоличествоСтрок);

			Прервать;
			
		КонецЕсли;

	КонецЦикла;
	
	Для А = 0 По МассивПеременные.Количество() - 1 Цикл
		
		Объект.Данные	 = СтрЗаменить(Объект.Данные, "Переменные[""" + МассивПеременные[А] + """]", МассивПеременные[А]);	
		Объект.Результат = СтрЗаменить(Объект.Результат, "Переменные[""" + МассивПеременные[А] + """]", МассивПеременные[А]);	

	КонецЦикла;  

КонецПроцедуры
//***********************************************************************************************************
&НаСервере
Процедура ПроектПриИзмененииНаСервере()
	
	Элементы.Файл.СписокВыбора.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ПроектыФайлы.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Проекты.Файлы КАК ПроектыФайлы");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл     
		
		Элементы.Файл.СписокВыбора.Добавить(Выборка.Наименование, Выборка.Наименование);
		
	КонецЦикла;

КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ПроектПриИзменении(Элемент)

	ПроектПриИзмененииНаСервере();

КонецПроцедуры
//***********************************************************************************************************
&НаСервере
Процедура ФайлПриИзмененииНаСервере()
	
	Элементы.ФункцияПроцедура.СписокВыбора.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ПроцедурыФункции.Адрес КАК Адрес,
	|	ПроцедурыФункции.Наименование КАК Наименование,
	|	ПроцедурыФункции.ЭтоФункция КАК ЭтоФункция,
	|	ПроцедурыФункции.ЭтоПроцедура КАК ЭтоПроцедура,
	|	ПроцедурыФункции.Экспортная КАК Экспортная,
	|	ПроцедурыФункции.Параметры КАК Параметры
	|ИЗ
	|	РегистрСведений.ПроцедурыФункции КАК ПроцедурыФункции
	|ГДЕ
	|	ПроцедурыФункции.Проект = &Проект
	|	И ПроцедурыФункции.Файл = &Файл
	|	И (ПроцедурыФункции.Тип <> 32
	|			И ПроцедурыФункции.Тип <> 33)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|АВТОУПОРЯДОЧИВАНИЕ");
	
	Запрос.УстановитьПараметр("Файл",	 Объект.Файл);
	Запрос.УстановитьПараметр("Проект",	 Объект.Проект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Элементы.ФункцияПроцедура.СписокВыбора.Добавить(Выборка.Адрес, Выборка.Наименование);
		
	КонецЦикла; 

КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ФайлПриИзменении(Элемент)

	ФайлПриИзмененииНаСервере();

КонецПроцедуры
//***********************************************************************************************************
&НаСервере
Процедура ФункцияПроцедураПриИзмененииНаСервере()
	
	Объект.Данные	 = ""; 
	Объект.Результат = ""; 
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ПроектыФункцииПроцедуры.Текст КАК Текст
	|ИЗ
	|	Справочник.Проекты.ФункцииПроцедуры КАК ПроектыФункцииПроцедуры
	|ГДЕ
	|	ПроектыФункцииПроцедуры.Ссылка = &Ссылка
	|	И ПроектыФункцииПроцедуры.Адрес = &Адрес
	|	И ПроектыФункцииПроцедуры.Файл ПОДОБНО &Файл");
	
	Запрос.УстановитьПараметр("Файл",	 Объект.Файл);
	Запрос.УстановитьПараметр("Адрес",	 Число(Объект.ФункцияПроцедура));
	Запрос.УстановитьПараметр("Ссылка",	 Объект.Проект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Объект.Данные = Выборка.Текст; 
		
	КонецЕсли;
	
КонецПроцедуры
//***********************************************************************************************************
&НаКлиенте
Процедура ФункцияПроцедураПриИзменении(Элемент)

	ФункцияПроцедураПриИзмененииНаСервере();

КонецПроцедуры
//***********************************************************************************************************
