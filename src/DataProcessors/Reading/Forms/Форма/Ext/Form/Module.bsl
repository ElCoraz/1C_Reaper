//*****************************************************************************************
&НаСервере
Процедура ОбновитьДанные()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Значения.Тип КАК Тип,
	|	Значения.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.Значения КАК Значения");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Для Каждого Значение Из Метаданные.Перечисления.Значение.ЗначенияПеречисления Цикл 
			
			Если Значение.Синоним = Строка(Выборка.Тип) Тогда  	
				
				Попытка
					
					Объект[Значение.Имя] = Выборка.Значение.Получить();     
					
				Исключение
					
				КонецПопытки;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла; 

КонецПроцедуры
//*****************************************************************************************
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОбновитьДанные();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ПроцедурыФункции.Адрес КАК Адрес,
	|	ПроцедурыФункции.Наименование КАК Наименование
	|ИЗ
	|	РегистрСведений.ПроцедурыФункции КАК ПроцедурыФункции
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|АВТОУПОРЯДОЧИВАНИЕ");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Элементы.ПроцедурыФункции.СписокВыбора.Добавить(Выборка.Адрес, Выборка.Наименование);
		
	КонецЦикла; 
	
КонецПроцедуры
//*****************************************************************************************
&НаСервере
Функция NextНаСервере()
	
	Возврат РегистрыСведений.Code.СоздатьКлючЗаписи(Новый Структура("Строка", Объект.CurrentPoin));

КонецФункции
//*****************************************************************************************
&НаСервере
Функция ПолучитьОписание(opCode, Operand, Адрес)
	
	Если opCode = 2 Тогда 
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	Memory.Наименование КАК Наименование
		|ИЗ
		|	РегистрСведений.Memory КАК Memory
		|ГДЕ
		|	Memory.Адрес = &Адрес");
		
		Запрос.УстановитьПараметр("Адрес", Адрес);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			Переменная = СокрЛП(Выборка.Наименование);
			
			Если Найти(Переменная, "_хщ") = 0 И Найти(Переменная, "_че") = 0 Тогда 
			
				Объект.Text = Объект.Text + " " + СокрЛП(Переменная) + Символы.ПС;          
			
			КонецЕсли;
			
			Возврат Переменная;
			
		КонецЕсли; 
		
	ИначеЕсли opCode = 3 Тогда  
		
		Если ЗначениеЗаполнено(Элементы.ПФ.Заголовок) Тогда 
			
			Адрес = "-1";
			
			Для А = 0 По Элементы.ПроцедурыФункции.СписокВыбора.Количество() - 1 Цикл 
				
				Если СокрЛП(Элементы.ПроцедурыФункции.СписокВыбора.Получить(А).Представление) = СокрЛП(Элементы.ПФ.Заголовок) Тогда 
					
					Адрес = Элементы.ПроцедурыФункции.СписокВыбора.Получить(А).Значение;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	ЗначенияПроцедурФункций.Значение КАК Значение
			|ИЗ
			|	РегистрСведений.ЗначенияПроцедурФункций КАК ЗначенияПроцедурФункций
			|ГДЕ
			|	ЗначенияПроцедурФункций.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЗначенияПроцедурыФункции.Var)
			|	И ЗначенияПроцедурФункций.Адрес = &Адрес
			|	И ЗначенияПроцедурФункций.Номер = &Номер");
			
			Запрос.УстановитьПараметр("Адрес", Адрес);
			Запрос.УстановитьПараметр("Номер", Operand);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда 
				
				Переменная = СокрЛП(Выборка.Значение);  
				
				Объект.Text = Объект.Text + " " + СокрЛП(Переменная) + Символы.ПС;
				
				Возврат Переменная; 
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли opCode = 4 Тогда 
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	Memory.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.Memory КАК Memory
		|ГДЕ
		|	Memory.Адрес = &Адрес");
		
		Запрос.УстановитьПараметр("Адрес", Адрес);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда 
			
			Переменная = СокрЛП(Выборка.Значение.Получить());  
			
			Объект.Text = Объект.Text + " " + СокрЛП(Переменная) + Символы.ПС;
			
			Возврат Переменная;
			
		КонецЕсли; 
		
	ИначеЕсли opCode = 5 Тогда // "Загрузить на стек результат последней функции/метода"

		Возврат "Загрузить на стек результат последней функции/метода";
		
	ИначеЕсли opCode = 6 Тогда // "Загрузить на стек Ложь" 
		
		//Объект.Text = Объект.Text + "Ложь" + Символы.ПС;
	
		Возврат "Ложь";
		
	ИначеЕсли opCode = 7 Тогда // "Загрузить на стек Истина"
		
		//Объект.Text = Объект.Text + "Истина" + Символы.ПС;
	
		Возврат "Истина";
		
	ИначеЕсли opCode = 8 Тогда // "Загрузить на стек Неопределено"
		
		Объект.Text = Объект.Text + "Неопределено" + Символы.ПС;
	
		Возврат "Неопределено";
		
	ИначеЕсли opCode = 9 Тогда // "Загрузить на стек Null"
		
		Возврат "Null";
		
	ИначеЕсли opCode = 10 Тогда // "Загрузить на стек пустое значение"
		
		Объект.Text = Объект.Text + """" + Символы.ПС;
	
		Возврат "Пустое значение";
		
	ИначеЕсли opCode = 11 Тогда // "unknown1"
		
		Возврат "Удалить значение из стека";
		
	ИначеЕсли opCode = 12 Тогда // Получение свойства .<Имя Свойства> 
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	Memory.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.Memory КАК Memory
		|ГДЕ
		|	Memory.Адрес = &Адрес");
		
		Запрос.УстановитьПараметр("Адрес", Адрес);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда 
			
			Свойство = СокрЛП(Выборка.Значение.Получить());
			
			Переменная = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
			
			Количество = СтрЧислоСтрок(Объект.Text); 
			
			Текст = "";
			
			Для А = 1 По Количество - 1 Цикл 
				
				Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
				
			КонецЦикла; 
			
			Объект.Text = Текст + СокрЛП(Переменная) + "." + СокрЛП(Свойство) + Символы.ПС;

			Возврат Свойство;
			
		КонецЕсли; 
		
	ИначеЕсли opCode = 13 Тогда // "Получение элемента массива []" 
		
		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + СокрЛП(Переменная1) + "[" + СокрЛП(Переменная2) + "]" + Символы.ПС;
		
		Возврат "Получение элемента массива []";
		
	ИначеЕсли opCode = 14 Тогда // "Получить из коллекции выборку"
		
		Возврат "Получить из коллекции выборку";
		
	ИначеЕсли opCode = 15 Тогда // "Получить из выборки очередной элемент коллекции. Этот элемент попадает в переменную, которая была на вершине стека, а в стек вместо этой переменной помещается результат успешности (Истина - получили очередной элемент, Ложь - нет)"
		
		Возврат "Получить из выборки очередной элемент коллекции";
		
	ИначеЕсли opCode = 16 Тогда 

		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + СокрЛП(Переменная1) + " = " + СокрЛП(Переменная2) + ";" + Символы.ПС;
		
		Возврат "=";
		
	ИначеЕсли opCode = 17 Тогда // "Возврат (установить результат функции/метода)"		
		
		Возврат "Возврат (установить результат функции/метода)";
		
	ИначеЕсли opCode = 18 Тогда // "Указание количества используемых параметров в следующем вызове (метода, функции)"
		
		Объект.Count = Operand;
		
		Возврат "Указание количества используемых параметров в следующем вызове (метода, функции)";
		
	ИначеЕсли opCode = 19 Тогда // "Вызов локальной процедуры или функции"
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ПроцедурыФункции.Наименование КАК Наименование
		|ИЗ
		|	РегистрСведений.ПроцедурыФункции КАК ПроцедурыФункции
		|ГДЕ
		|	ПроцедурыФункции.Номер = &Номер");
		
		Запрос.УстановитьПараметр("Номер", Operand);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда 
			
			ПроцедураФункция = СокрЛП(Выборка.Наименование);
			
			Массив = Новый Массив;
			
			Для А = СтрЧислоСтрок(Объект.Text) - Объект.Count + 1 По СтрЧислоСтрок(Объект.Text) Цикл 
				
				Массив.Добавить(СтрПолучитьСтроку(Объект.Text, А));
				
			КонецЦикла;  
			
			Переменные = СтрСоединить(Массив, ",");

			Количество = СтрЧислоСтрок(Объект.Text) - Объект.Count; 
			
			Текст = "";
			
			Для А = 1 По Количество Цикл 
				
				Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
				
			КонецЦикла; 
			
			Объект.Text = Текст + ПроцедураФункция + "(" + СокрЛП(Переменные) + ")" + Символы.ПС; 
			
			Объект.Count = -1;

			Возврат "Вызов локальной процедуры или функции - " + ПроцедураФункция;   
			
		КонецЕсли;
		
	ИначеЕсли opCode = 20 Тогда // "Выполнение метода .<Имя метода>() (являющегося процедурой, т.е. без возврата значения)"  
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	Memory.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.Memory КАК Memory
		|ГДЕ
		|	Memory.Адрес = &Адрес");
		
		Запрос.УстановитьПараметр("Адрес", Адрес);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда 
			
			НаименованиеМетода = СокрЛП(Выборка.Значение.Получить());
			
			Массив = Новый Массив;
			
			Для А = СтрЧислоСтрок(Объект.Text) - Объект.Count + 1 По СтрЧислоСтрок(Объект.Text) Цикл 
				
				Массив.Добавить(СтрПолучитьСтроку(Объект.Text, А));
				
			КонецЦикла;  
			
			Переменные = СтрСоединить(Массив, ",");

			Количество = СтрЧислоСтрок(Объект.Text) - Объект.Count; 
			
			Текст = "";
			
			НаименованиеОбъекта = СокрЛП(СтрПолучитьСтроку(Объект.Text, Количество));
		
			Для А = 1 По Количество - 1 Цикл 
				
				Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
				
			КонецЦикла; 
			
			Объект.Text = Текст + НаименованиеОбъекта + "." + НаименованиеМетода + "(" + СокрЛП(Переменные) + ")" + Символы.ПС; 
			
			Объект.Count = -1;

			Возврат "Выполнение метода .<Имя метода>() (являющегося процедурой, т.е. без возврата значения) - " + НаименованиеМетода;
			
		КонецЕсли; 

	ИначеЕсли opCode = 21 Тогда // "Выполнение метода .<Имя метода>() (являющегося функцией, т.е. возвращающий значение)"
			
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	Memory.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.Memory КАК Memory
		|ГДЕ
		|	Memory.Адрес = &Адрес");
		
		Запрос.УстановитьПараметр("Адрес", Адрес);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда 
			
			НаименованиеМетода = СокрЛП(Выборка.Значение.Получить());
			
			Массив = Новый Массив;
			
			Для А = СтрЧислоСтрок(Объект.Text) - Объект.Count + 1 По СтрЧислоСтрок(Объект.Text) Цикл 
				
				Массив.Добавить(СтрПолучитьСтроку(Объект.Text, А));
				
			КонецЦикла;  
			
			Переменные = СтрСоединить(Массив, ",");

			Количество = СтрЧислоСтрок(Объект.Text) - Объект.Count; 
			
			Текст = "";
			
			НаименованиеОбъекта = СокрЛП(СтрПолучитьСтроку(Объект.Text, Количество));
		
			Для А = 1 По Количество - 1 Цикл 
				
				Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
				
			КонецЦикла; 
			
			Объект.Text = Текст + НаименованиеОбъекта + "." + НаименованиеМетода + "(" + СокрЛП(Переменные) + ")" + Символы.ПС; 
			
			Объект.Count = -1;

			Возврат "Выполнение метода .<Имя метода>() (являющегося функцией, т.е. возвращающий значение) - " + НаименованиеМетода;
			
		КонецЕсли; 

	ИначеЕсли opCode = 22 Тогда // "Конец блока (процедуры, модуля)" 
		
		Возврат "Конец блока (процедуры, модуля)";
		
	ИначеЕсли opCode = 23 Тогда // "Операция -"   
		
		Переменная = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + " -" + СокрЛП(Переменная) + Символы.ПС;
		
		Возврат "Операция -";
		
	ИначеЕсли opCode = 24 Тогда // "Операция +" 

		Переменная1 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1));
		Переменная2 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + Переменная1 + " + " + Переменная2 + Символы.ПС;
		
		Возврат "Операция +";
		
	ИначеЕсли opCode = 25 Тогда // "Операция -"  

		Переменная1 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1));
		Переменная2 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + Переменная1 + " - " + Переменная2 + Символы.ПС;
		
		Возврат "Операция -";
		
	ИначеЕсли opCode = 26 Тогда // "Операция *"

		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + Переменная1 + " * " + Переменная2 + Символы.ПС;
		
		Возврат "Операция *";
		
	ИначеЕсли opCode = 27 Тогда // "Операция /"

		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + Переменная1 + " / " + Переменная2 + Символы.ПС;
		
		Возврат "Операция /";
		
	ИначеЕсли opCode = 28 Тогда // "Операция %"

		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + Переменная1 + " % " + Переменная2 + Символы.ПС;
		
		Возврат "Операция %";
		
	ИначеЕсли opCode = 29 Тогда // "Операция НЕ"
		
		Переменная = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + " Если НЕ " + Переменная + " Тогда " + Символы.ПС;
		
		Возврат "Операция НЕ";
		
	ИначеЕсли opCode = 30 Тогда // "Операция И. Если операнд на вершине стека Ложь, то происходит переход по адресу, указаному во втором параметре, т.е. пропуск вычисления второго операнда, т.к. от него уже ничего не зависит. Из стека при этом значение не удаляется (результатом операции является Ложь). Иначе, если на вершине стека Истина, из стека удаляется значение и перехода не происходит, т.е. вычисляется второй операнд, результат которого полностью определяет результат всей операции)"
		
		Переменная1 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1));
		Переменная2 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + " Если " + Переменная1 + " И " + Переменная2 + " Тогда " + Символы.ПС;
		
		Возврат "Операция И";
		
	ИначеЕсли opCode = 31 Тогда // "Операция ИЛИ. Если операнд на вершине стека Истина, то происходит переход по адресу, указаному во втором параметре, т.е. пропуск вычисления второго операнда, т.к. от него уже ничего не зависит. Из стека при этом значение не удаляется (результатом операции является Истина). Иначе, если на вершине стека Ложь, из стека удаляется значение и перехода не происходит, т.е. вычисляется второй операнд, результат которого полностью определяет результат всей операции)"
		
		Переменная1 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1));
		Переменная2 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + " Если " + Переменная1 + " ИЛИ " + Переменная2 + " Тогда " + Символы.ПС;
		
		Возврат "Операция ИЛИ";
		
	ИначеЕсли opCode = 32 Тогда // "unknown2"
		
		Переменная1 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1));
		Переменная2 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + " Если " + Переменная1 + " < " + Переменная2 + " Тогда " + Символы.ПС;
		
		Возврат "Операция <";
		
	ИначеЕсли opCode = 33 Тогда // "Операция = (сравнение)"
		
		Переменная1 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1));
		Переменная2 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + " Если " + Переменная1 + " = " + Переменная2 + " Тогда " + Символы.ПС + "//" + Символы.ПС + " Иначе " + Символы.ПС + "// " + Символы.ПС +" КонецЕсли; " + Символы.ПС;
		
		Возврат "Операция = (сравнение)";
		
	ИначеЕсли opCode = 34 Тогда // "Операция <>"
		
		Переменная1 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1));
		Переменная2 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + " Если " + Переменная1 + " <> " + Переменная2 + " Тогда " + Символы.ПС + "//" + Символы.ПС + " Иначе " + Символы.ПС + "// " + Символы.ПС +" КонецЕсли; " + Символы.ПС;
		
		Возврат "Операция <>";
		
	ИначеЕсли opCode = 35 Тогда // "Операция >"
		
		Переменная1 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1));
		Переменная2 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + " Если " + Переменная1 + " > " + Переменная2 + " Тогда " + Символы.ПС + "//" + Символы.ПС + " Иначе " + Символы.ПС + "// " + Символы.ПС +" КонецЕсли; " + Символы.ПС;
		
		Возврат "Операция >";
		
	ИначеЕсли opCode = 36 Тогда // "Операция <"
		
		Переменная1 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1));
		Переменная2 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + " Если " + Переменная1 + " < " + Переменная2 + " Тогда " + Символы.ПС + "//" + Символы.ПС + " Иначе " + Символы.ПС + "// " + Символы.ПС +" КонецЕсли; " + Символы.ПС;
		
		Возврат "Операция <";
		
	ИначеЕсли opCode = 37 Тогда // "Операция >="
		
		Переменная1 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1));
		Переменная2 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + " Если " + Переменная1 + " >= " + Переменная2 + " Тогда " + Символы.ПС + "//" + Символы.ПС + " Иначе " + Символы.ПС + "// " + Символы.ПС +" КонецЕсли; " + Символы.ПС;
		
		Возврат "Операция >=";
		
	ИначеЕсли opCode = 38 Тогда // "Операция <="
		
		Переменная1 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1));
		Переменная2 = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + " Если " + Переменная1 + " <= " + Переменная2 + " Тогда " + Символы.ПС + "//" + Символы.ПС + " Иначе " + Символы.ПС + "// " + Символы.ПС +" КонецЕсли; " + Символы.ПС;
		
		Возврат "Операция <=";
		
	ИначеЕсли opCode = 39 Тогда // "Переход на заданный шаг"
		
		Возврат "Переход на заданный шаг";
		
	ИначеЕсли opCode = 40 Тогда // "Переход, если Ложь"  
		
		Возврат "Переход, если Ложь";
		
	ИначеЕсли opCode = 41 Тогда // "Переход, если Истина"
		
		Возврат "Переход, если Истина";
		
	ИначеЕсли opCode = 42 Тогда // "Перейти"  
		
		Если ЗначениеЗаполнено(Элементы.ПФ.Заголовок) Тогда  
			
			Попытка
				
				Возврат "Перейти - " + (ПолучитьЛокальнуюМетку(Operand) + 1);     
				
			Исключение
				
			КонецПопытки;
			
		Иначе 
			
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	Labels.Значение КАК Значение
			|ИЗ
			|	РегистрСведений.Labels КАК Labels
			|ГДЕ
			|	Labels.Строка = &Строка");
			
			Запрос.УстановитьПараметр("Строка", Operand);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда
				
				Возврат "Перейти - " + Выборка.Значение; 
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли opCode = 43 Тогда // "Инкремент"   
		
		Переменная = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + Переменная + " = " + Переменная + " + 1;" + Символы.ПС;
		
		Возврат "Инкремент";
		
	ИначеЕсли opCode = 44 Тогда // "Попытка"
		
		Возврат "Попытка";
		
	ИначеЕсли opCode = 45 Тогда // "Завершение блока (Процедура, Функция, Попытка) без ошибки (Возврат или Исключение)"
		
		Возврат "Завершение блока (Процедура, Функция, Попытка) без ошибки (Возврат или Исключение)";
		
	ИначеЕсли opCode = 46 Тогда // "КонецПопытки (конец обработки ошибки)"
		
		Возврат "КонецПопытки (конец обработки ошибки)";
		
	ИначеЕсли opCode = 47 Тогда // "ВызватьИсключение"
		
		Возврат "ВызватьИсключение";
		
	ИначеЕсли opCode = 48 Тогда // "Создать на стеке временных переменных временную переменную"    
		
		Возврат "Создать на стеке временных переменных временную переменную";
		
	ИначеЕсли opCode = 49 Тогда // "Загрузить в стек временную переменную из стека временных переменных"
		
		Возврат "Загрузить в стек временную переменную из стека временных переменных";
		
	ИначеЕсли opCode = 50 Тогда // "Удалить из стека временных переменных временную переменную"
		
		Возврат "Удалить из стека временных переменных временную переменную";
		
	ИначеЕсли opCode = 51 Тогда // "Новый"
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	Memory.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.Memory КАК Memory
		|ГДЕ
		|	Memory.Адрес = &Адрес");
		
		Запрос.УстановитьПараметр("Адрес", Адрес);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда   
			
			НовыйОбъект = СокрЛП(Выборка.Значение.Получить());
			
			Массив = Новый Массив;
			
			Для А = СтрЧислоСтрок(Объект.Text) - Объект.Count + 1 По СтрЧислоСтрок(Объект.Text) Цикл 
				
				Массив.Добавить(СтрПолучитьСтроку(Объект.Text, А));
				
			КонецЦикла;  
			
			Переменные = СтрСоединить(Массив, ",");

			Количество = СтрЧислоСтрок(Объект.Text) - Объект.Count; 
			
			Текст = "";

			Для А = 1 По Количество Цикл 
				
				Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
				
			КонецЦикла; 
			
			Если ЗначениеЗаполнено(Текст) Тогда 
				
				Объект.Text = Текст + "Новый " + НовыйОбъект + "(" + Переменные + ")" + Символы.ПС;
				
			Иначе 
				
				Объект.Text = Текст + "Новый " + НовыйОбъект + Символы.ПС;
				
			КонецЕсли;

			Объект.Count = -1;

			Возврат "Новый - " + НовыйОбъект;
			
		КонецЕсли; 

	ИначеЕсли opCode = 52 Тогда // "Выполнить"

		Возврат "Выполнить";

	ИначеЕсли opCode = 53 Тогда // "СтрДлина"  
		
		Переменная = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "СтрДлина(" + Переменная + ")" + Символы.ПС;

		Возврат "СтрДлина";

	ИначеЕсли opCode = 54 Тогда // "СокрЛ"
		
		Переменная = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "СокрЛ(" + Переменная + ")" + Символы.ПС;

		Возврат "СокрЛ";

	ИначеЕсли opCode = 55 Тогда // "СокрП"
		
		Переменная = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "СокрП(" + Переменная + ")" + Символы.ПС;

		Возврат "СокрП";

	ИначеЕсли opCode = 56 Тогда // "СокрЛП"
		
		Переменная = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "СокрЛП(" + Переменная + ")" + Символы.ПС;

		Возврат "СокрЛП";

	ИначеЕсли opCode = 57 Тогда // "Лев" 
		
		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Лев(" + СокрЛП(Переменная1) + ", " + СокрЛП(Переменная2) + ")" + Символы.ПС;

		Возврат "Лев";

	ИначеЕсли opCode = 58 Тогда // "Прав"
		
		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Прав(" + СокрЛП(Переменная1) + ", " + СокрЛП(Переменная2) + ")" + Символы.ПС;

		Возврат "Прав";

	ИначеЕсли opCode = 59 Тогда // "Сред"
		
		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 2);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная3 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 3 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Сред(" + СокрЛП(Переменная1) + ", " + СокрЛП(Переменная2) + ", " + СокрЛП(Переменная3) + ")" + Символы.ПС;

		Возврат "Сред";

	ИначеЕсли opCode = 60 Тогда // "Найти" 
		
		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Найти(" + СокрЛП(Переменная1) + ", " + СокрЛП(Переменная2) + ")" + Символы.ПС;

		Возврат "Найти";

	ИначеЕсли opCode = 61 Тогда // "Врег"
		
		Переменная = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Врег(" + Переменная + ")" + Символы.ПС;

		Возврат "Врег";

	ИначеЕсли opCode = 62 Тогда // "Нрег"
		
		Переменная = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Нрег(" + Переменная + ")" + Символы.ПС;

		Возврат "Нрег";

	ИначеЕсли opCode = 63 Тогда // "Символ"
		
		Переменная = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Символ(" + Переменная + ")" + Символы.ПС;

		Возврат "Символ";

	ИначеЕсли opCode = 64 Тогда // "КодСимвола"
		
		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "КодСимвола(" + СокрЛП(Переменная1) + ", " + СокрЛП(Переменная2) + ")" + Символы.ПС;

		Возврат "КодСимвола";

	ИначеЕсли opCode = 65 Тогда // "ПустаяСтрока"
		
		Переменная = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "ПустаяСтрока(" + Переменная + ")" + Символы.ПС;

		Возврат "ПустаяСтрока";

	ИначеЕсли opCode = 66 Тогда // "Цел"
		
		Переменная = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Цел(" + Переменная + ")" + Символы.ПС;

		Возврат "Цел";

	ИначеЕсли opCode = 67 Тогда // "Окр"    
		
		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Окр(" + СокрЛП(Переменная1) + ", " + СокрЛП(Переменная2) + ")" + Символы.ПС;

		Возврат "Окр (2)";

	ИначеЕсли opCode = 68 Тогда // "Окр"
		
		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 2);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная3 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 3 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Окр(" + СокрЛП(Переменная1) + ", " + СокрЛП(Переменная2) + ", " + СокрЛП(Переменная3) + ")" + Символы.ПС;

		Возврат "Окр (3)";

	ИначеЕсли opCode = 69 Тогда // "Булево"

		Возврат "Булево";

	ИначеЕсли opCode = 70 Тогда // "Число"
		
		Переменная = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Число(" + СокрЛП(Переменная) + ")" + Символы.ПС;

		Возврат "Число";

	ИначеЕсли opCode = 71 Тогда // "Строка"
		
		Переменная = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Строка(" + СокрЛП(Переменная) + ")" + Символы.ПС;

		Возврат "Строка";

	ИначеЕсли opCode = 72 Тогда // "Дата"

		Возврат "Дата (1)";

	ИначеЕсли opCode = 73 Тогда // "Дата"

		Возврат "Дата (3)";

	ИначеЕсли opCode = 74 Тогда // "Дата"

		Возврат "Дата (6)";

	ИначеЕсли opCode = 75 Тогда // "ДобавитьМесяц"

		Возврат "ДобавитьМесяц (2)";

	ИначеЕсли opCode = 76 Тогда // "НачалоМесяца"

		Возврат "НачалоМесяца";

	ИначеЕсли opCode = 77 Тогда // "КонецМесяца"

		Возврат "КонецМесяца";

	ИначеЕсли opCode = 78 Тогда // "НачалоКвартала"

		Возврат "НачалоКвартала";

	ИначеЕсли opCode = 79 Тогда // "КонецКвартала"

		Возврат "КонецКвартала";

	ИначеЕсли opCode = 80 Тогда // "НачалоГода"

		Возврат "НачалоГода";

	ИначеЕсли opCode = 81 Тогда // "КонецГода"

		Возврат "КонецГода";

	ИначеЕсли opCode = 82 Тогда // "Год"

		Возврат "Год";

	ИначеЕсли opCode = 83 Тогда // "Месяц"

		Возврат "Месяц";

	ИначеЕсли opCode = 84 Тогда // "День"

		Возврат "День";

	ИначеЕсли opCode = 85 Тогда // "Час"

		Возврат "Час";

	ИначеЕсли opCode = 86 Тогда // "Минута"

		Возврат "Минута";

	ИначеЕсли opCode = 87 Тогда // "Секунда"

		Возврат "Секунда";

	ИначеЕсли opCode = 88 Тогда // "ДеньГода"

		Возврат "ДеньГода";

	ИначеЕсли opCode = 89 Тогда // "НеделяГода"

		Возврат "НеделяГода";

	ИначеЕсли opCode = 90 Тогда // "ДеньНедели"

		Возврат "ДеньНедели";

	ИначеЕсли opCode = 91 Тогда // "НачалоНедели"

		Возврат "НачалоНедели";

	ИначеЕсли opCode = 92 Тогда // "КонецНедели"

		Возврат "КонецНедели";

	ИначеЕсли opCode = 93 Тогда // "НачалоДня"

		Возврат "НачалоДня";

	ИначеЕсли opCode = 94 Тогда // "КонецДня"

		Возврат "КонецДня";

	ИначеЕсли opCode = 95 Тогда // "НачалоЧаса"

		Возврат "НачалоЧаса";

	ИначеЕсли opCode = 96 Тогда // "КонецЧаса"

		Возврат "КонецЧаса";

	ИначеЕсли opCode = 97 Тогда // "НачалоМинуты"

		Возврат "НачалоМинуты";

	ИначеЕсли opCode = 98 Тогда // "КонецМинуты"

		Возврат "КонецМинуты";

	ИначеЕсли opCode = 99 Тогда // "ТекущаяДата"    

		Возврат "ТекущаяДата";

	ИначеЕсли opCode = 100 Тогда // "СтрЗаменить"
		
		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 2);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная3 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 3 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + " СтрЗаменить(" + СокрЛП(Переменная1) + ", " + СокрЛП(Переменная2) + ", " + СокрЛП(Переменная3) + ")" + Символы.ПС;
		
		Возврат "СтрЗаменить (3)";

	ИначеЕсли opCode = 101 Тогда // "СтрЧислоСтрок"
		
		Переменная = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "СтрЧислоСтрок(" + СокрЛП(Переменная) + ")" + Символы.ПС;

		Возврат "СтрЧислоСтрок";

	ИначеЕсли opCode = 102 Тогда // "СтрПолучитьСтроку"
		
		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "СтрПолучитьСтроку(" + СокрЛП(Переменная1) + ", " + СокрЛП(Переменная2) + ")" + Символы.ПС;

		Возврат "СтрПолучитьСтроку (2)";

	ИначеЕсли opCode = 103 Тогда // "Мин"

		Возврат "Мин";

	ИначеЕсли opCode = 104 Тогда // "Макс"

		Возврат "Макс";

	ИначеЕсли opCode = 105 Тогда // "СтрЧислоВхождений"
		
		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "СтрЧислоВхождений(" + СокрЛП(Переменная1) + ", " + СокрЛП(Переменная2) + ")" + Символы.ПС;

		Возврат "СтрЧислоВхождений (2)";

	ИначеЕсли opCode = 106 Тогда // "ОписаниеОшибки"

		Возврат "ОписаниеОшибки";

	ИначеЕсли opCode = 107 Тогда // "ТипЗнч"
		
		Переменная = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "ТипЗнч(" + СокрЛП(Переменная) + ")" + Символы.ПС;

		Возврат "ТипЗнч";

	ИначеЕсли opCode = 108 Тогда // "Тип"
		
		Переменная = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Тип(" + СокрЛП(Переменная) + ")" + Символы.ПС;

		Возврат "Тип";

	ИначеЕсли opCode = 109 Тогда // "Вычислить"

		Возврат "Вычислить";

	ИначеЕсли opCode = 110 Тогда // "Формат"
		
		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Формат(" + СокрЛП(Переменная1) + ", " + СокрЛП(Переменная2) + ")" + Символы.ПС;

		Возврат "Формат (2)";

	ИначеЕсли opCode = 111 Тогда // "Новый"

		Возврат "Новый";

	ИначеЕсли opCode = 112 Тогда // "ACos"

		Возврат "ACos";

	ИначеЕсли opCode = 113 Тогда // "ASin"

		Возврат "ASin";

	ИначеЕсли opCode = 114 Тогда // "ATan"

		Возврат "ATan";

	ИначеЕсли opCode = 115 Тогда // "Cos"

		Возврат "Cos";

	ИначеЕсли opCode = 116 Тогда // "Exp"     

		Возврат "Exp";

	ИначеЕсли opCode = 117 Тогда // "Log"

		Возврат "Log";

	ИначеЕсли opCode = 118 Тогда // "Log10"

		Возврат "Log10";

	ИначеЕсли opCode = 119 Тогда // "Pow"
		
		Переменная1 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text) - 1);
		Переменная2 = СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 2 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "Pow(" + СокрЛП(Переменная1) + ", " + СокрЛП(Переменная2) + ")" + Символы.ПС;

		Возврат "Pow (2)";

	ИначеЕсли opCode = 120 Тогда // "Sin"

		Возврат "Sin";

	ИначеЕсли opCode = 121 Тогда // "Sqrt"

		Возврат "Sqrt";

	ИначеЕсли opCode = 122 Тогда // "Tan"

		Возврат "Tan";

	ИначеЕсли opCode = 123 Тогда // "ДобавитьОбработчик"

		Возврат "ДобавитьОбработчик";

	ИначеЕсли opCode = 124 Тогда // "ДобавитьОбработчик"

		Возврат "ДобавитьОбработчик";

	ИначеЕсли opCode = 125 Тогда // "УдалитьОбработчик"

		Возврат "УдалитьОбработчик";

	ИначеЕсли opCode = 126 Тогда // "УдалитьОбработчик"

		Возврат "УдалитьОбработчик";

	ИначеЕсли opCode = 127 Тогда // "ТРег"
		
		Переменная = СокрЛП(СтрПолучитьСтроку(Объект.Text, СтрЧислоСтрок(Объект.Text)));
		
		Количество = СтрЧислоСтрок(Объект.Text); 
		
		Текст = "";
		
		Для А = 1 По Количество - 1 Цикл 
			
			Текст = Текст + СтрПолучитьСтроку(Объект.Text, А) + Символы.ПС; 	
			
		КонецЦикла; 
		
		Объект.Text = Текст + "ТРег(" + Переменная + ")" + Символы.ПС;

		Возврат "ТРег";

	ИначеЕсли opCode = 128 Тогда // "ИнформацияОбОшибке"

		Возврат "ИнформацияОбОшибке";

	КонецЕсли;  
	
	Возврат "";	
	
КонецФункции
//*****************************************************************************************
&НаСервере
Процедура УстановитьШаг(ТекущийШаг = Неопределено) 

	Decompile.УстановитьЗначениеНастроек(Перечисления.Значение.CurrentPoin, ?(ТекущийШаг = Неопределено, Объект.CurrentPoin, ТекущийШаг)); 

КонецПроцедуры
//*****************************************************************************************
&НаКлиенте
Процедура Next(Команда)  
	
	Если Объект.CurrentPoin = -1 Тогда 
		
		Объект.CurrentPoin = Объект.EntryPoint + 1;		
		
	КонецЕсли;
	
	Элементы.Code.ТекущаяСтрока = NextНаСервере(); 
	
	Объект.CurrentPoin = Объект.CurrentPoin + 1; 
	
	Элементы.Code.ТекущиеДанные.Описание = ПолучитьОписание(Элементы.Code.ТекущиеДанные.opCode, Элементы.Code.ТекущиеДанные.Operand, Элементы.Code.ТекущиеДанные.Адрес);

	УстановитьШаг(); 

	ОбновитьДанные();

КонецПроцедуры
//*****************************************************************************************
&НаСервере
Процедура ClearНаСервере()
	
	Decompile.УстановитьЗначениеНастроек(Перечисления.Значение.CodeText,	 "");
	Decompile.УстановитьЗначениеНастроек(Перечисления.Значение.CurrentPoin,	 -1);  
	
КонецПроцедуры
//*****************************************************************************************
&НаКлиенте
Процедура Clear(Команда)   
	
	ClearНаСервере();
	
	ОбновитьДанные();
	
КонецПроцедуры
////*****************************************************************************************  
&НаСервере
Функция ПолучитьМетку(Operand)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Labels.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.Labels КАК Labels
	|ГДЕ
	|	Labels.Строка = &Строка");
	
	Запрос.УстановитьПараметр("Строка", Operand);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Число(СтрЗаменить(Выборка.Значение, Символы.НПП, "")); 
		
	КонецЕсли;
	
	Возврат -1;
	
КонецФункции
//*****************************************************************************************  
&НаСервере
Функция ПолучитьЛокальнуюМетку(Operand)
	
	Адрес = "-1";
	
	Для А = 0 По Элементы.ПроцедурыФункции.СписокВыбора.Количество() - 1 Цикл 
		
		Если СокрЛП(Элементы.ПроцедурыФункции.СписокВыбора.Получить(А).Представление) = СокрЛП(Элементы.ПФ.Заголовок) Тогда 
			
			Адрес = Элементы.ПроцедурыФункции.СписокВыбора.Получить(А).Значение;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ЗначенияПроцедурФункций.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.ЗначенияПроцедурФункций КАК ЗначенияПроцедурФункций
	|ГДЕ
	|	ЗначенияПроцедурФункций.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЗначенияПроцедурыФункции.Lbl)
	|	И ЗначенияПроцедурФункций.Адрес = &Адрес
	|	И ЗначенияПроцедурФункций.Номер = &Номер");
	
	Запрос.УстановитьПараметр("Адрес", Адрес);
	Запрос.УстановитьПараметр("Номер", Operand);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		
		Возврат Число(Выборка.Значение);
		
	КонецЕсли;  
	
	Возврат -1;
	
КонецФункции
//*****************************************************************************************  
&НаКлиенте
Процедура CodeВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) 
	
	СтандартнаяОбработка = Ложь;  
	
	Если Элементы.Code.ТекущиеДанные.opCode = 42 Тогда 
		
		Если ЗначениеЗаполнено(Элементы.ПФ.Заголовок) Тогда                                             
			
			Адрес = ПолучитьЛокальнуюМетку(Элементы.Code.ТекущиеДанные.Operand) + 1;
			
			УстановитьШаг(Адрес);
		
		Иначе 
			
			Адрес = ПолучитьМетку(Элементы.Code.ТекущиеДанные.Operand) + 1;
			
			УстановитьШаг(Адрес);
			
		КонецЕсли;
		
	ИначеЕсли 
		Элементы.Code.ТекущиеДанные.opCode = 39 
		ИЛИ Элементы.Code.ТекущиеДанные.opCode = 40 
		ИЛИ Элементы.Code.ТекущиеДанные.opCode = 41 
		Тогда
		
		Адрес = Число(СтрЗаменить(Элементы.Code.ТекущиеДанные.Operand, Символы.НПП, "")) + 1;
		
		УстановитьШаг(Адрес);

	КонецЕсли;
	
	ОбновитьДанные();
	
КонецПроцедуры
//*****************************************************************************************  
&НаКлиенте
Процедура ПроцедурыФункцииОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	УстановитьШаг(Число(ВыбранноеЗначение) + 1);   
	
	Для А = 0 По Элементы.ПроцедурыФункции.СписокВыбора.Количество() - 1 Цикл 
		
		Если Элементы.ПроцедурыФункции.СписокВыбора.Получить(А).Значение = ВыбранноеЗначение Тогда 
			
			Элементы.ПФ.Заголовок = Элементы.ПроцедурыФункции.СписокВыбора.Получить(А).Представление; 

		КонецЕсли;
		
	КонецЦикла; 

	ОбновитьДанные();

КонецПроцедуры
//*****************************************************************************************  
&НаКлиенте
Процедура ПроцедурыФункцииОчистка(Элемент, СтандартнаяОбработка)
	
	УстановитьШаг(-1);
	
	ОбновитьДанные();

КонецПроцедуры
//*****************************************************************************************  
&НаКлиенте
Процедура ПроцедурыФункцииПриИзменении(Элемент)
	
	Объект.Text = "";
	
КонецПроцедуры
//*****************************************************************************************  
&НаСервере
Процедура ПроектПриИзмененииНаСервере()
	
	Элементы.Файл.СписокВыбора.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ПроектыФайлы.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Проекты.Файлы КАК ПроектыФайлы");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл     
		
		Элементы.Файл.СписокВыбора.Добавить(Выборка.Наименование, Выборка.Наименование);
		
	КонецЦикла;
	
КонецПроцедуры
//*****************************************************************************************  
&НаКлиенте
Процедура ПроектПриИзменении(Элемент)   
	
	ПроектПриИзмененииНаСервере();

КонецПроцедуры
//*****************************************************************************************  
