//*****************************************************************************************
&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	//Если ВыбранныеФайлы <> Неопределено Тогда
	//	
	//	Объект.Файл = ВыбранныеФайлы[0];
	//	
	//	ОбработатьФайл();

	//	Элементы.ЭлементыCode.Обновить();
	//	Элементы.ЭлементыStack.Обновить();
	//	Элементы.ЭлементыMemory.Обновить();
	//	
	//	ОбновитьДанные(); 

	//	ПоказатьПредупреждение(, "Загрузка данных завершена");
	//	
	//КонецЕсли;
	
КонецПроцедуры
//*****************************************************************************************
//&НаКлиенте
//Процедура ФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//	
//	СтандартнаяОбработка = Ложь;
//	
//	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
//	
//	Диалог.Фильтр	 = "Все файлы (*.*)|*.*";
//	Диалог.Заголовок = "Выберите файл";
//	
//	Диалог.Показать(Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект));
//	
//КонецПроцедуры
//*****************************************************************************************
&НаСервере
Функция ВыполнитьШагНаСервере()  

	Возврат Decompile.ВыполнитьШагОбработки();

КонецФункции
//*****************************************************************************************
&НаСервере
Функция ВыполнитьОдинШаг()  

	Возврат Decompile.ВыполнитьОдинШагОбработки();

КонецФункции
//*****************************************************************************************
&НаКлиенте
Процедура run(Команда) 

	ВыполнитьШагНаСервере();
	
	Элементы.ЭлементыCode.Обновить();
	Элементы.ЭлементыStack.Обновить();
	Элементы.ЭлементыMemory.Обновить();
	Элементы.ЭлементыHistory.Обновить();
	Элементы.ЭлементыStackTMP.Обновить();

	ОбновитьCurrnetPoinНаСервере();

КонецПроцедуры
//*****************************************************************************************
&НаКлиенте
Процедура step(Команда)

	ВыполнитьОдинШаг();
	
	Элементы.ЭлементыCode.Обновить();
	Элементы.ЭлементыStack.Обновить();
	Элементы.ЭлементыMemory.Обновить();
	Элементы.ЭлементыHistory.Обновить();
	Элементы.ЭлементыStackTMP.Обновить();
	
	ОбновитьCurrnetPoinНаСервере();

КонецПроцедуры
//*****************************************************************************************
&НаСервере
Процедура ОбновитьДанные()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Значения.Тип КАК Тип,
	|	Значения.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.Значения КАК Значения");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Для Каждого Значение Из Метаданные.Перечисления.Значение.ЗначенияПеречисления Цикл 
			
			Если Значение.Синоним = Строка(Выборка.Тип) Тогда  	
				
				Попытка
					
					Объект[Значение.Имя] = Выборка.Значение.Получить();     
					
				Исключение
					
				КонецПопытки;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла; 

	Элементы.Файл.Доступность = НЕ ЗначениеЗаполнено(Объект.Файл); 

КонецПроцедуры
//*****************************************************************************************
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьДанные(); 

КонецПроцедуры
//*****************************************************************************************
&НаСервере
Процедура ОбновитьCurrnetPoinНаСервере()

	Объект.CodeText		 = Decompile.ПолучитьЗначениеПоТипу(Перечисления.Значение.CodeText, "");
	Объект.CurrentPoin	 = Decompile.ПолучитьЗначениеНастроек(Перечисления.Значение.CurrentPoin); 

КонецПроцедуры
//*****************************************************************************************
&НаСервере
Процедура CurrnetPoinПриИзмененииНаСервере()

	Decompile.УстановитьЗначениеНастроек(Перечисления.Значение.CurrnetPoin, Объект.CurrentPoin);
	
КонецПроцедуры
//*****************************************************************************************
&НаКлиенте
Процедура CurrnetPoinПриИзменении(Элемент)
	
	CurrnetPoinПриИзмененииНаСервере(); 
	
КонецПроцедуры
//***************************************************************************************** 
&НаСервереБезКонтекста
Процедура ЭлементыStackПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Stack.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.Stack КАК Stack
	|ГДЕ
	|	Stack.Адрес = &Адрес");
	
	Запрос.УстановитьПараметр("Адрес", Строки.ПолучитьКлючи()[0].Адрес);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		
		Попытка
			
			Строки.Получить(Строки.ПолучитьКлючи()[0]).Представление = Строка(Выборка.Значение.Получить());   
			
		Исключение
			
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры
//***************************************************************************************** 
&НаСервере
Процедура setНаСервере()  
	
	Константы.ТекущаяСтрока.Установить(1);  
	
КонецПроцедуры
//***************************************************************************************** 
&НаКлиенте
Процедура set(Команда)   
	
	setНаСервере(); 
	
КонецПроцедуры
//***************************************************************************************** 
&НаСервере
Процедура clearНаСервере()  
	
	History = РегистрыСведений.History.СоздатьНаборЗаписей();
	
	History.Записать();
	
	Stack = РегистрыСведений.Stack.СоздатьНаборЗаписей();
	
	Stack.Записать(); 
	
	StackTMP = РегистрыСведений.StackTMP.СоздатьНаборЗаписей();
	
	StackTMP.Записать();

	Decompile.УстановитьЗначениеНастроек(Перечисления.Значение.CodeText,	 "");
	Decompile.УстановитьЗначениеНастроек(Перечисления.Значение.CurrentPoin,	 -1);
	
КонецПроцедуры
//***************************************************************************************** 
&НаКлиенте
Процедура clear(Команда) 
	
	clearНаСервере();  
	
	Элементы.ЭлементыCode.Обновить();
	Элементы.ЭлементыStack.Обновить();
	Элементы.ЭлементыMemory.Обновить();
	Элементы.ЭлементыHistory.Обновить();
	Элементы.ЭлементыStackTMP.Обновить();

	ОбновитьCurrnetPoinНаСервере();

КонецПроцедуры
//***************************************************************************************** 
